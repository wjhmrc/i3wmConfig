# i3 config file (v4)
#
# Please see https://i3wm.org/docs/userguide.html for a complete reference!
#
# This config file uses keycodes (bindsym) and was written for the QWERTY
# layout.
#
# To get a config file with the same key positions, but for your current
# layout, use the i3-config-wizard
#

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
font pango:monospace 8
exec fcitx

# This font is widely installed, provides lots of unicode glyphs, right-to-left
# text rendering and scalability on retina/hidpi displays (thanks to pango).
#font pango:DejaVu Sans Mono 8

# Before i3 v4.8, we used to recommend this one as the default:
# font -misc-fixed-medium-r-normal--13-120-75-75-C-70-iso10646-1
# The font above is very space-efficient, that is, it looks good, sharp and
# clear in small sizes. However, its unicode glyph coverage is limited, the old
# X core fonts rendering does not support right-to-left and this being a bitmap
# font, it doesn’t scale on retina/hidpi displays.

# use these keys for focus, movement, and resize directions when reaching for
# the arrows is not convenient
set $up k
set $down j
set $left h
set $right l
set $mod Mod4

# use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

exec --no-startup-id compton -b #开机自启 

# start a terminal
# bindsym $mod+Return exec gnome-terminal
bindsym $mod+Return exec xfce4-terminal

# amixer
bindsym $mod+F3 exec amixer set Master 5%+
bindsym $mod+F2 exec amixer set Master 5%-
bindsym $mod+F1 exec amixer set Master toggle

# i3lock
bindsym $mod+F12 exec i3lock-fancy

# open config doc
bindsym $mod+Control+h exec kate ~/.config/i3/config

# start the firefox
bindsym $mod+Shift+f exec firefox

# start the bluetooth
bindsym $mod+Shift+b exec blueberry

# start kate
bindsym $mod+Control+k exec kate


# wps, et, wpp
bindsym $mod+Control+w exec wps
bindsym $mod+Control+e exec et
bindsym $mod+Control+p exec wpp

# kill focused window
bindsym $mod+Shift+q kill

# start dmenu (a program launcher)
# bindsym $mod+d exec dmenu_run
#
# run rofi
bindsym $mod+d exec rofi -show run

# screenshot(scrot)
bindsym Print exec --no-startup-id scrot -q 100 -e 'mv $f ~/Pictures/'
bindsym --release $mod+p exec --no-startup-id scrot -s -q 100 -e 'mv $f ~/Pictures/'
bindsym $mod+Shift+p exec --no-startup-id scrot -u -q 100 -e 'mv $f ~/Pictures/'

# arandr
bindsym $mod+Shift+n exec arandr
# There also is the (new) i3-dmenu-desktop which only displays applications
# shipping a .desktop file. It is a wrapper around dmenu, so you need that
# installed.
# bindsym $mod+d exec --no-startup-id i3-dmenu-desktop

# change focus
bindsym $mod+$left focus left
bindsym $mod+$down focus down
bindsym $mod+$up focus up
bindsym $mod+$right focus right

# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+$left move left
bindsym $mod+Shift+$down move down
bindsym $mod+Shift+$up move up
bindsym $mod+Shift+$right move right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# split in horizontal orientation
bindsym $mod+g split h

# split in vertical orientation
bindsym $mod+v split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# focus the parent container
bindsym $mod+a focus parent

# focus the child container
#bindsym $mod+d focus child

# move the currently focused window to the scratchpad
bindsym $mod+Shift+minus move scratchpad

# Show the next scratchpad window or hide the focused scratchpad window.
# If there are multiple scratchpad windows, this command cycles through them.
bindsym $mod+minus scratchpad show

# use window title, but no border
bindsym $mod+t border normal 0
# use no window title and a thick border
bindsym $mod+y border pixel 3
# use neither window title nor border
bindsym $mod+u border none

set $mode_system  lock(L) logout(O) reboot(R) shutdown(S) exit(Esc)
bindsym $mod+c mode "$mode_system"
mode "$mode_system" {
    bindsym l exec --no-startup-id i3lock -c '#000000', mode "default"
    bindsym o exec --no-startup-id i3-msg exit, mode "default"
    bindsym r exec --no-startup-id systemctl reboot, mode "default"
    bindsym s exec --no-startup-id systemctl poweroff, mode "default"
    bindsym Escape mode "default"
}


# workspace names
set $ws1 1:
set $ws2 2:
set $ws3 3:
set $ws4 4:
set $ws5 5:
set $ws6 6:
set $ws7 7:
set $ws8 8:
set $ws9 9:
set $ws10 0:

# switch to workspace
bindsym $mod+1 workspace $ws1
bindsym $mod+2 workspace $ws2
bindsym $mod+3 workspace $ws3
bindsym $mod+4 workspace $ws4
bindsym $mod+5 workspace $ws5
bindsym $mod+6 workspace $ws6
bindsym $mod+7 workspace $ws7
bindsym $mod+8 workspace $ws8
bindsym $mod+9 workspace $ws9
bindsym $mod+0 workspace $ws10

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace $ws1
bindsym $mod+Shift+2 move container to workspace $ws2
bindsym $mod+Shift+3 move container to workspace $ws3
bindsym $mod+Shift+4 move container to workspace $ws4
bindsym $mod+Shift+5 move container to workspace $ws5
bindsym $mod+Shift+6 move container to workspace $ws6
bindsym $mod+Shift+7 move container to workspace $ws7
bindsym $mod+Shift+8 move container to workspace $ws8
bindsym $mod+Shift+9 move container to workspace $ws9
bindsym $mod+Shift+0 move container to workspace $ws10

# assign
# assign [class="chromium"] $ws4
# assign [class="arandr"] $ws10
# assign [class="wps"] $ws6
# assign [class="et"] $ws6
# assign [class="wpp"] $ws6
# assign [class="virtualbox"] $ws9
# assign [class="steam"] $ws5
# assign [class="thunderbird"] $ws7
# assign [class="slack"] $ws8
# assign [class="virtualbox"] $ws9

# for_window [instance="Steam"] floating enable
# for_window [instance="Steam"] border none

# reload the configuration file
bindsym $mod+Shift+c reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart
# exit i3 (logs you out of your X session)
bindsym $mod+Shift+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -b 'Yes, exit i3' 'i3-msg exit'"

gaps inner 10
gaps outer 5

# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym $left       resize shrink width 10 px or 10 ppt
        bindsym $down       resize grow height 10 px or 10 ppt
        bindsym $up         resize shrink height 10 px or 10 ppt
        bindsym $right      resize grow width 10 px or 10 ppt

        # same bindings, but for the arrow keys
        bindsym Left        resize shrink width 10 px or 10 ppt
        bindsym Down        resize grow height 10 px or 10 ppt
        bindsym Up          resize shrink height 10 px or 10 ppt
        bindsym Right       resize grow width 10 px or 10 ppt

        # back to normal: Enter or Escape
        bindsym Return mode "default"
        bindsym Escape mode "default"
}

bindsym $mod+r mode "resize"

# Start i3bar to display a workspace bar (plus the system information i3status
# finds out, if available)
# i3status
# bar {
    # status_command i3status
# #    status_command py3status -c ~/.i3status.conf
    # strip_workspace_numbers yes
    # separator_symbol " "
    # position top
    # font -misc-fixed-medium-r-normal--13-120-75-75-C-70-iso10646-1
    # font pango:DejaVu Sans Mono 10
    # colors {
        # background #000000
        # statusline #ffffff
        # separator #00E3E3

        # focused_workspace  #4F4F4F #4F4F4F #ffffff
        # active_workspace   #333333 #5f676a #ffffff
        # inactive_workspace #333333 #222222 #888888
        # urgent_workspace   #2f343a #900000 #ffffff
        # binding_mode       #2f343a #900000 #ffffff
    # }
# }

# polybar
# bar {
    # i3bar_command $HOME/.config/polybar/launch.sh
# }
# border
new_window pixel 0

# background
exec_always --no-startup-id feh --bg-scale "/home/wjh/Pictures/Wallpapers/wallpaper.jpg"

# screen timeout
exec --no-startup-id xset dpms 600 800 900

# xrandr
exec --no-startup-id xrandr --output eDP1 --mode 1920x1080 --same-as HDMI2

# polybar
exec_always --no-startup-id $HOME/.config/polybar/launch.sh

# electron-ssr
exec --no-startup-id electron-ssr

exec --no-startup-id "xinput set-prop --type=int --format=8 \"ETPS/2 Elantech Touchpad\" \"libinput Tapping Enabled\" 1



#######################################################################
# automatically start i3-config-wizard to offer the user to create a
# keysym-based config which used their favorite modifier (alt or windows)
#
# i3-config-wizard will not launch if there already is a config file
# in ~/.i3/config.
#
# Please remove the following exec line:
#######################################################################
#exec i3-config-wizard
